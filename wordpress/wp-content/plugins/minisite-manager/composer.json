{
    "name": "internal/minisite-manager",
    "description": "Internal WordPress plugin to manage business mini-sites (profiles) with revisions and optional Timber rendering.",
    "type": "wordpress-plugin",
    "license": "proprietary",
    "require": {
        "php": ">=8.0",
        "monolog/monolog": "^3.9",
        "timber/timber": "^2.0"
    },
    "require-dev": {
        "brain/monkey": "^2.0",
        "cweagans/composer-patches": "^1.7",
        "dg/bypass-finals": "^1.9",
        "enlightn/security-checker": "^2.0",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "^11",
        "squizlabs/php_codesniffer": "^3.7",
        "wp-coding-standards/wpcs": "^3.0"
    },
    "autoload": {
        "psr-4": {
            "Minisite\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "extra": {
        "branch-alias": {
            "dev-main": "1.x-dev"
        }
    },
    "scripts": {
        "test": "phpunit --testsuite=Unit",
        "test:unit": "phpunit --testsuite=Unit",
        "test:integration": "echo 'No integration tests configured' && exit 0",
        "test:coverage": "phpunit --coverage-html=build/coverage",
        "analyze": "phpstan analyse src --level=5 --memory-limit=512M",
        "lint": "phpcs --standard=phpcs.xml src/ minisite-manager.php",
        "lint:fix": "phpcbf --standard=phpcs.xml src/ minisite-manager.php",
        "security": "security-checker security:check",
        "quality": [
            "@lint",
            "@analyze",
            "@security"
        ],
        "check": [
            "@quality",
            "@test:unit"
        ],
        "pre-commit": [
            "@quality",
            "@test:unit"
        ],
        "setup:hooks": "bash scripts/setup-git-hooks.sh",
        "test:all": "bash scripts/run-tests.sh",
        "changelog": "php scripts/generate-changelog.php",
        "changelog:update": "php scripts/generate-changelog.php",
        "post-install-cmd": [
            "phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs"
        ]
    },
    "config": {
        "optimize-autoloader": true,
        "sort-packages": true,
        "allow-plugins": {
            "cweagans/composer-patches": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
