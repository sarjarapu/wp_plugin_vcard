<!DOCTYPE html>
<html lang="en" class="scroll-smooth" data-theme="blue">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>{{ page_title }}</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary:#2563EB; --on-primary:#fff;
      --secondary:#0EA5E9; --on-secondary:#03283A;
      --background:#F8FAFC; --on-background:#0F172A;
      --surface:#FFFFFF; --on-surface:#0F172A;
      --surface-1:#F1F5F9; --on-surface-variant:#475569;
      --outline:#CBD5E1; --outline-variant:#E2E8F0;
      --focus-ring: color-mix(in srgb, var(--primary) 40%, transparent);
      --surface-0:var(--surface);
    }
    :is(a,button,input,textarea,select):focus-visible {
      outline:none; box-shadow:0 0 0 2px var(--focus-ring), 0 0 0 4px white;
      border-radius:.5rem;
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
</head>
<body class="antialiased bg-[var(--background)] text-[var(--on-background)]">
  <main class="min-h-screen">
    <div class="max-w-7xl mx-auto p-6">
      <!-- Header -->
      <div class="mb-6">
        <h1 class="text-3xl md:text-4xl font-extrabold text-[var(--on-surface)]">{{ page_title }}</h1>
        <p class="mt-2 text-[var(--on-surface-variant)]">Manage versions and publish changes to your minisite.</p>
      </div>

      <!-- Control Buttons -->
      <div class="flex items-center gap-3 mb-6 p-4 rounded-xl bg-[var(--surface-1)] ring-1 ring-[var(--outline-variant)]">
        <a href="{{ function('home_url','/account/sites') }}" 
           class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[var(--surface)] text-[var(--on-surface)] ring-1 ring-[var(--outline-variant)] hover:bg-[var(--surface-1)]">
          <i class="fa-solid fa-arrow-left"></i> Back to Sites
        </a>
        <a href="{{ function('home_url','/account/sites/' ~ profile.id ~ '/edit') }}" 
           class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[var(--primary)] text-[var(--on-primary)] shadow hover:brightness-95">
          <i class="fa-solid fa-edit"></i> Edit latest draft
        </a>
      </div>

      <!-- Version List -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {% for version in versions %}
          <div class="rounded-xl ring-1 ring-[var(--outline-variant)] bg-[var(--surface-0)] p-4">
            <!-- Header -->
            <div class="flex items-center justify-between gap-3 mb-3">
              <div class="flex items-center gap-2">
                <span class="inline-flex items-center gap-1 px-2 py-1 rounded text-xs font-medium
                  {% if version.status == 'published' %}
                    bg-green-100 text-green-800
                  {% else %}
                    bg-amber-100 text-amber-800
                  {% endif %}">
                  <i class="fa-solid {% if version.status == 'published' %}fa-check-circle{% else %}fa-edit{% endif %}"></i>
                  {{ version.status|title }}
                </span>
                <span class="text-sm font-semibold text-[var(--on-surface)]">v{{ version.versionNumber }}</span>
                {% if version.sourceVersionId %}
                  <span class="inline-flex items-center gap-1 px-1.5 py-0.5 rounded text-xs bg-blue-100 text-blue-800">
                    <i class="fa-solid fa-copy"></i> Copy
                  </span>
                {% endif %}
              </div>
              <div class="text-xs text-[var(--on-surface-variant)]">
                {{ version.createdAt|date('M j, Y g:i A') }}
              </div>
            </div>
            
            <!-- Content -->
            {% if version.label %}
              <h3 class="text-sm font-medium text-[var(--on-surface)] mb-1 line-clamp-1">{{ version.label }}</h3>
            {% endif %}
            
            {% if version.comment %}
              <p class="text-xs text-[var(--on-surface-variant)] mb-3 line-clamp-2">{{ version.comment }}</p>
            {% endif %}
            
            <!-- Debug info (temporary) -->
            <div class="text-xs text-gray-500 mb-2">
              Debug: version.id={{ version.id }}, profile.currentVersionId={{ profile.currentVersionId }}, version.status={{ version.status }}
            </div>
            
            <!-- Actions -->
            <div class="flex items-center gap-2">
              {% if version.status == 'draft' %}
                <button type="button" class="publish-version-btn inline-flex items-center gap-1.5 px-3 py-2 rounded-lg bg-[var(--secondary)] text-[var(--on-secondary)] text-sm shadow hover:brightness-95 disabled:opacity-50"
                  data-version-id="{{ version.id }}" data-site-id="{{ profile.id }}">
                  <i class="fa-solid fa-rocket"></i> Deploy
                </button>
              {% endif %}
              
              {% if version.status == 'published' and profile.currentVersionId == version.id %}
                <span class="inline-flex items-center gap-1.5 px-3 py-2 rounded-lg bg-green-100 text-green-800 text-sm">
                  <i class="fa-solid fa-check"></i> Live
                </span>
              {% elseif version.status == 'published' %}
                <span class="inline-flex items-center gap-1.5 px-3 py-2 rounded-lg bg-gray-100 text-gray-600 text-sm">
                  <i class="fa-solid fa-archive"></i> Published
                </span>
              {% endif %}
              
              <button type="button" class="restore-version-btn inline-flex items-center gap-1.5 px-3 py-2 rounded-lg bg-[var(--surface-1)] text-[var(--on-surface)] ring-1 ring-[var(--outline-variant)] hover:bg-[var(--surface)] text-sm"
                data-version-id="{{ version.id }}" data-site-id="{{ profile.id }}" data-version-number="{{ version.versionNumber }}">
                <i class="fa-solid fa-copy"></i> Copy
              </button>
              
              <a href="{{ function('home_url','/account/sites/' ~ profile.id ~ '/preview/' ~ version.id) }}" target="_blank"
                 class="inline-flex items-center gap-1.5 px-3 py-2 rounded-lg bg-[var(--surface-1)] text-[var(--on-surface)] ring-1 ring-[var(--outline-variant)] hover:bg-[var(--surface)] text-sm">
                <i class="fa-solid fa-eye"></i> Preview
              </a>
            </div>
          </div>
        {% else %}
          <div class="col-span-full rounded-2xl ring-1 ring-[var(--outline-variant)] bg-[var(--surface-0)] p-12 text-center">
            <i class="fa-solid fa-history text-4xl text-[var(--on-surface-variant)] mb-4"></i>
            <h3 class="text-lg font-medium text-[var(--on-surface)] mb-2">No versions yet</h3>
            <p class="text-[var(--on-surface-variant)] mb-4">Start editing your site to create your first version.</p>
            <a href="{{ function('home_url','/account/sites/' ~ profile.id ~ '/edit') }}" 
               class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[var(--primary)] text-[var(--on-primary)] shadow hover:brightness-95">
              <i class="fa-solid fa-edit"></i> Edit Site
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  </main>

  <script>
    // Handle publish version
    document.querySelectorAll('.publish-version-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        if (!confirm('Are you sure you want to publish this version? This will make it live on your website.')) {
          return;
        }

        const versionId = this.dataset.versionId;
        const siteId = this.dataset.siteId;
        
        this.disabled = true;
        this.innerHTML = '<i class="fa-solid fa-spinner fa-spin"></i> Publishing...';

        const formData = new FormData();
        formData.append('action', 'publish_version');
        formData.append('nonce', '{{ function("wp_create_nonce", "minisite_version") }}');
        formData.append('site_id', siteId);
        formData.append('version_id', versionId);

        fetch('{{ function("admin_url", "admin-ajax.php") }}', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('Version published successfully!');
            location.reload();
          } else {
            alert('Failed to publish: ' + (data.data || 'Unknown error'));
            this.disabled = false;
            this.innerHTML = '<i class="fa-solid fa-rocket"></i> Publish';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to publish: Network error');
          this.disabled = false;
          this.innerHTML = '<i class="fa-solid fa-rocket"></i> Publish';
        });
      });
    });

    // Handle restore version
    document.querySelectorAll('.restore-version-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const versionNumber = this.dataset.versionNumber;
        if (!confirm(`Are you sure you want to create a new draft from version ${versionNumber}?`)) {
          return;
        }

        const versionId = this.dataset.versionId;
        const siteId = this.dataset.siteId;
        
        this.disabled = true;
        this.innerHTML = '<i class="fa-solid fa-spinner fa-spin"></i> Creating...';

        const formData = new FormData();
        formData.append('action', 'rollback_version');
        formData.append('nonce', '{{ function("wp_create_nonce", "minisite_version") }}');
        formData.append('site_id', siteId);
        formData.append('source_version_id', versionId);

        fetch('{{ function("admin_url", "admin-ajax.php") }}', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('New draft created successfully! You can now edit and publish it.');
            location.reload();
          } else {
            alert('Failed to create draft: ' + (data.data || 'Unknown error'));
            this.disabled = false;
            this.innerHTML = '<i class="fa-solid fa-copy"></i> Create Draft from This';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to create draft: Network error');
          this.disabled = false;
          this.innerHTML = '<i class="fa-solid fa-copy"></i> Create Draft from This';
        });
      });
    });
  </script>
</body>
</html>
